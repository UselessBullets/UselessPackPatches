plugins {
	id 'babric-loom' version '1.1.+'
	id 'java'
}

group = project.mod_group
archivesBaseName = project.mod_name
version = project.mod_version

loom {
	gluedMinecraftJar()
	noIntermediateMappings()
	customMinecraftManifest.set("https://github.com/Turnip-Labs/bta-manifest-repo/releases/download/v${project.bta_version}/${project.bta_version}.json")
}

repositories {
	mavenCentral()
	maven { url = "https://jitpack.io" }
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net/'
	}
	flatDir {
		dirs "/lib"
	}
	ivy {
		url = "https://github.com/Better-than-Adventure"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/Turnip-Labs"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-bta-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://piston-data.mojang.com"
		patternLayout {
			artifact "v1/[organisation]/[revision]/[module].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/MartinSVK12"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://github.com/UselessBullets"
		patternLayout {
			artifact "[organisation]/releases/download/v[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	ivy {
		url = "https://piston-data.mojang.com"
		patternLayout {
			artifact "v1/[organisation]/[revision]/[module].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
	maven {
		url "https://libraries.minecraft.net"
	}
}

dependencies {
	minecraft "bta-download-repo:bta:${project.bta_version}"
	mappings loom.layered() {}

	modRuntimeOnly "objects:client:43db9b498cb67058d2e12d394e6507722e71bb45" // https://piston-data.mojang.com/v1/objects/43db9b498cb67058d2e12d394e6507722e71bb45/client.jar
	modImplementation "fabric-loader:fabric-loader:${project.loader_version}"
	//modImplementation "Useless-Profiler:profiler:1.0.1"

	modImplementation files("lib/halplibe-${project.halplibe_version}.jar")
	modImplementation files("lib/prismaticlibe-${project.prismatic_version}.jar")
	modImplementation files("lib/terrainapi-${project.terrainapi_version}.jar")
	modImplementation files("lib/dragonfly-${project.dragonfly_version}.jar")
	modImplementation files("lib/catalyst-core-${project.catalyst_core_version}.jar")
	modImplementation files("lib/catalyst-energy-${project.catalyst_energy_version}.jar")

	modImplementation files("lib/btbta-${project.btb_version}.jar")
	modImplementation files("lib/bonusblocks-${project.bonusblocks_version}.jar")
	modImplementation files("lib/afloydironchest-${project.ironChests_version}.jar")
	modImplementation files("lib/btwaila-${project.btwaila_version}.jar")
	modImplementation files("lib/caveuberhaul-${project.caveuberhaul_version}.jar")
	modImplementation files("lib/noname_dyes-${project.noname_dyes_version}.jar")
	modImplementation files("lib/spawneggs-${project.spawneggs_version}.jar")
	modImplementation files("lib/Things-${project.KThings_version}.jar")
	modImplementation files("lib/yumbleach-${project.yumbleach_version}.jar")

	modImplementation files("lib/PotatoLogistics-${project.potato_version}.jar")
	modImplementation files("lib/btabackpacks-${project.backpacks_version}.jar")
	modImplementation files("lib/ironfurnaces-${project.ironfurnaces_version}.jar")
	modImplementation files("lib/modernboats-${project.boats_version}.jar")
	modImplementation files("lib/qolfeatures-useless-${project.qol_version}.jar")
	modImplementation files("lib/simple-tech-useless-${project.simple_tech_version}.jar")

	modImplementation files("lib/industry-useless-${project.industry2}.jar")
	modImplementation files("lib/better_ai-${project.better_ai}.jar")
	modImplementation files("lib/better_with_aquatic-${project.better_with_aquatic}.jar")
	modImplementation files("lib/farlanders-useless-${project.farlanders}.jar")

	modImplementation files("lib/polymorph-1.1.0.jar")
	modImplementation files("lib/localdif-1.0.0.jar")
	modImplementation files("lib/resourceful-1.2.0.jar")
//	modImplementation files("lib/statmaster-1.0.1.jar")
	modImplementation files("lib/zoomplus-2.1.0-7.1.jar")
//	modImplementation files("lib/commander-1.2.11.jar")
//	modImplementation "com.mojang:brigadier:1.0.18"

	include(implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:0.2.0-beta.9")))
//	modImplementation("net.fabricmc:fabric-language-kotlin:${project.flk_version}+kotlin.${project.kotlin_version}")

	modImplementation files("lib/modmenu-bta-2.0.3.jar")

	implementation "org.slf4j:slf4j-api:1.8.0-beta4"
	implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.16.0"

	implementation 'com.google.guava:guava:30.0-jre'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

	include(implementation("org.apache.commons:commons-lang3:3.12.0"))

	var log4jVersion = "2.20.0"
	implementation("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	implementation("org.apache.logging.log4j:log4j-api:${log4jVersion}")
	implementation("org.apache.logging.log4j:log4j-1.2-api:${log4jVersion}")
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
	withSourcesJar()
}

tasks.withType(JavaCompile) {
	options.release.set 8
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

processResources {
	inputs.property "version", version

	filesMatching("fabric.mod.json") {
		expand "version": version
	}
}
